RWR {
  top [ws1 name ws2 lb ws4 rule+ ws5 rb ws3 more*) = ‛«rule»«more»’
  more [name ws2 lb ws4 rule* ws5 rb ws3] = ‛«rule»’
  rule [lhs ws1 keq ws2 rws] = ‛«getRuleName ()»’
  RuleLHS_down [name lb Params* rb ws downString ws2 ] = ‛«name»: function («extractFormals (Params)») {\n_ruleEnter («name»);«setRuleName (name)»\nvar _0 = «downstring.rwr ()»;\n«Params»’
  RuleLHS_nodown [name lb Params* rb ] = ‛«name»: function («extractFormals (Params)») {\n_ruleEnter («name»);«setRuleName (name)»«Params»’
  rewriteString [lq cs* rq ws] = ‛\‛«cs»\’’
  downString [lq cs* rq] = ‛\‛«cs»\’’
  char_eval [lb cs* rb] = ‛«cs»’
  char_newline [c] = ‛«c»’
  char_esc [c] = ‛«c»’
  char_raw [c] = ‛«c»’
  nonBracketChar [c] = ‛«c»’
  name [first rest*] = ‛«first»«rest»’
  nameFirst [c] = ‛«c»’
  nameRest [c] = ‛«c»’
  Param_plus [name suffix] = ‛\nvar «name» = _«name».rwr ().join ('');’
  Param_star [name suffix] = ‛\nvar «name» = _«name».rwr ().join ('');’
  Param_opt [name suffix] = ‛\nvar «name» = _«name».rwr ().join ('');’
  Param_flat [name suffix] = ‛\nvar «name» = _«name».rwr ();’
  comment [slsl cs* nl] = ‛’
}

